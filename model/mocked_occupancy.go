// Code generated by MockGen. DO NOT EDIT.
// Source: project_3/model (interfaces: OccupancyInterface)

// Package model is a generated GoMock package.
package model

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOccupancyInterface is a mock of OccupancyInterface interface.
type MockOccupancyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOccupancyInterfaceMockRecorder
}

// MockOccupancyInterfaceMockRecorder is the mock recorder for MockOccupancyInterface.
type MockOccupancyInterfaceMockRecorder struct {
	mock *MockOccupancyInterface
}

// NewMockOccupancyInterface creates a new mock instance.
func NewMockOccupancyInterface(ctrl *gomock.Controller) *MockOccupancyInterface {
	mock := &MockOccupancyInterface{ctrl: ctrl}
	mock.recorder = &MockOccupancyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOccupancyInterface) EXPECT() *MockOccupancyInterfaceMockRecorder {
	return m.recorder
}

// Combinations mocks base method.
func (m *MockOccupancyInterface) Combinations(arg0 []int, arg1, arg2, arg3 int, arg4 []int, arg5 *[][]int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Combinations", arg0, arg1, arg2, arg3, arg4, arg5)
}

// Combinations indicates an expected call of Combinations.
func (mr *MockOccupancyInterfaceMockRecorder) Combinations(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Combinations", reflect.TypeOf((*MockOccupancyInterface)(nil).Combinations), arg0, arg1, arg2, arg3, arg4, arg5)
}

// GenerateCombinations mocks base method.
func (m *MockOccupancyInterface) GenerateCombinations(arg0 []int, arg1 int) [][]int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateCombinations", arg0, arg1)
	ret0, _ := ret[0].([][]int)
	return ret0
}

// GenerateCombinations indicates an expected call of GenerateCombinations.
func (mr *MockOccupancyInterfaceMockRecorder) GenerateCombinations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateCombinations", reflect.TypeOf((*MockOccupancyInterface)(nil).GenerateCombinations), arg0, arg1)
}

// GenerateOccupancy mocks base method.
func (m *MockOccupancyInterface) GenerateOccupancy(arg0 *OccupancyRequest) OccupancyResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateOccupancy", arg0)
	ret0, _ := ret[0].(OccupancyResponse)
	return ret0
}

// GenerateOccupancy indicates an expected call of GenerateOccupancy.
func (mr *MockOccupancyInterfaceMockRecorder) GenerateOccupancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateOccupancy", reflect.TypeOf((*MockOccupancyInterface)(nil).GenerateOccupancy), arg0)
}
